{"version":3,"sources":["App.js","index.js"],"names":["App","socketRef","useRef","container","userVideo","userAudio","peersRef","audioPeersRef","roomID","createPeer","userToSignal","callerID","stream","peer","Peer","initiator","trickle","on","signal","current","emit","srcObject","addEventListener","play","err","window","createAudioPeer","a","addPeer","incomingSignal","addAudioPeer","useEffect","io","connect","className","ref","definer","onClick","style","display","navigator","mediaDevices","getDisplayMedia","cursor","then","users","forEach","userID","console","log","id","push","peerID","payload","find","p","getUserMedia","audio","muted","controls","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.47aeb060.chunk.js","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport \"./App.css\";\nimport io from \"socket.io-client\";\nimport Peer from \"simple-peer\";\n\nfunction App() {\n  const socketRef = useRef();\n  const container = useRef()\n  const userVideo = useRef();\n  const userAudio = useRef();\n  const peersRef = useRef([]);\n  const audioPeersRef = useRef([]);\n  const roomID = \"room\";\n\n  useEffect(() => {\n      socketRef.current = io.connect(\"/\");\n  }, []);\n\n  function stream() {\n    container.current.style.display = \"none\"\n    navigator.mediaDevices\n        .getDisplayMedia({ cursor: true })\n        .then((stream) => {\n          socketRef.current.on(\"all users\", (users) => {\n            users.forEach((userID) => {\n              console.log(userID);\n              const peer = createPeer(userID, socketRef.current.id, stream);\n              peersRef.current.push({\n                peerID: userID,\n                peer,\n              });\n            });\n          });\n          socketRef.current.on(\"user joined\", (payload) => {\n            const peer = addPeer(payload.signal, payload.callerID, stream);\n            peersRef.current.push({\n              peerID: payload.callerID,\n              peer,\n            });\n          });\n\n          socketRef.current.on(\"receiving returned signal\", (payload) => {\n            const item = peersRef.current.find((p) => p.peerID === payload.id);\n            item.peer.signal(payload.signal);\n          });\n        });\n      navigator.mediaDevices.getUserMedia({ audio: true }).then((stream) => {\n        userAudio.current.srcObject = stream;\n        userAudio.current.muted = \"true\";\n        socketRef.current.emit(\"join room\", roomID);\n        socketRef.current.on(\"all users\", (users) => {\n          users.forEach((userID) => {\n            console.log(userID);\n            const peer = createAudioPeer(userID, socketRef.current.id, stream);\n            audioPeersRef.current.push({\n              peerID: userID,\n              peer,\n            });\n          });\n        });\n        socketRef.current.on(\"user joined audio\", (payload) => {\n          const peer = addAudioPeer(payload.signal, payload.callerID, stream);\n          audioPeersRef.current.push({\n            peerID: payload.callerID,\n            peer,\n          });\n        });\n\n        socketRef.current.on(\"receiving returned audio signal\", (payload) => {\n          const item = audioPeersRef.current.find(\n            (p) => p.peerID === payload.id\n          );\n          item.peer.signal(payload.signal);\n        });\n      });\n      const stream = \"\";\n      socketRef.current.emit(\"join room\", roomID);\n      socketRef.current.on(\"all users\", (users) => {\n        users.forEach((userID) => {\n          console.log(userID);\n          const peer = createPeer(userID, socketRef.current.id, stream);\n          peersRef.current.push({\n            peerID: userID,\n            peer,\n          });\n        });\n      });\n      socketRef.current.on(\"user joined\", (payload) => {\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer,\n        });\n      });\n\n      socketRef.current.on(\"receiving returned signal\", (payload) => {\n        const item = peersRef.current.find((p) => p.peerID === payload.id);\n        item.peer.signal(payload.signal);\n      });\n      socketRef.current.on(\"all users\", (users) => {\n        users.forEach((userID) => {\n          console.log(userID);\n          const peer = createAudioPeer(userID, socketRef.current.id, stream);\n          audioPeersRef.current.push({\n            peerID: userID,\n            peer,\n          });\n        });\n      });\n      socketRef.current.on(\"user joined audio\", (payload) => {\n        const peer = addAudioPeer(payload.signal, payload.callerID, stream);\n        audioPeersRef.current.push({\n          peerID: payload.callerID,\n          peer,\n        });\n      });\n\n      socketRef.current.on(\"receiving returned audio signal\", (payload) => {\n        const item = audioPeersRef.current.find((p) => p.peerID === payload.id);\n        item.peer.signal(payload.signal);\n      });\n  }\n  function watch() {\n    container.current.style.display = \"none\"\n    userVideo.current.style.display = \"flex\"\n    const stream = \"\";\n      socketRef.current.emit(\"join room\", roomID);\n      socketRef.current.on(\"all users\", (users) => {\n        users.forEach((userID) => {\n          console.log(userID);\n          const peer = createPeer(userID, socketRef.current.id, stream);\n          peersRef.current.push({\n            peerID: userID,\n            peer,\n          });\n        });\n      });\n      socketRef.current.on(\"user joined\", (payload) => {\n        const peer = addPeer(payload.signal, payload.callerID, stream);\n        peersRef.current.push({\n          peerID: payload.callerID,\n          peer,\n        });\n      });\n\n      socketRef.current.on(\"receiving returned signal\", (payload) => {\n        const item = peersRef.current.find((p) => p.peerID === payload.id);\n        item.peer.signal(payload.signal);\n      });\n      socketRef.current.on(\"all users\", (users) => {\n        users.forEach((userID) => {\n          console.log(userID);\n          const peer = createAudioPeer(userID, socketRef.current.id, stream);\n          audioPeersRef.current.push({\n            peerID: userID,\n            peer,\n          });\n        });\n      });\n      socketRef.current.on(\"user joined audio\", (payload) => {\n        const peer = addAudioPeer(payload.signal, payload.callerID, stream);\n        audioPeersRef.current.push({\n          peerID: payload.callerID,\n          peer,\n        });\n      });\n\n      socketRef.current.on(\"receiving returned audio signal\", (payload) => {\n        const item = audioPeersRef.current.find((p) => p.peerID === payload.id);\n        item.peer.signal(payload.signal);\n      });\n  }\n\n  function createPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        signal,\n      });\n    });\n\n    peer.on(\"stream\", (stream) => {\n      userVideo.current.srcObject = stream;\n      userVideo.current.addEventListener(\"loadedmetadata\", () => {\n        try {\n          userVideo.current.play();\n        } catch (err) {}\n        window.addEventListener(\"mousedown\", () => {\n          userVideo.current.play();\n        });\n      });\n    });\n\n    return peer;\n  }\n\n  function createAudioPeer(userToSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socketRef.current.emit(\"sending audio signal\", {\n        userToSignal,\n        callerID,\n        signal,\n      });\n    });\n\n    peer.on(\"stream\", async (stream) => {\n      userAudio.current.srcObject = stream;\n      userAudio.current.addEventListener(\"loadedmetadata\", () => {\n        try {\n          userAudio.current.play();\n        } catch (err) {}\n        window.addEventListener(\"mousedown\", () => {\n          userAudio.current.play();\n        });\n      });\n    });\n\n    return peer;\n  }\n\n  function addPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socketRef.current.emit(\"returning signal\", { signal, callerID });\n    });\n\n    peer.on(\"stream\", (stream) => {\n      userVideo.current.srcObject = stream;\n      userVideo.current.addEventListener(\"loadedmetadata\", () => {\n        try {\n          userVideo.current.play();\n        } catch (err) {}\n        window.addEventListener(\"mousedown\", () => {\n          userVideo.current.play();\n        });\n      });\n    });\n\n    peer.signal(incomingSignal);\n\n    return peer;\n  }\n\n  function addAudioPeer(incomingSignal, callerID, stream) {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n    });\n\n    peer.on(\"signal\", (signal) => {\n      socketRef.current.emit(\"returning audio signal\", { signal, callerID });\n    });\n\n    peer.on(\"stream\", async (stream) => {\n      userAudio.current.srcObject = stream;\n      userAudio.current.addEventListener(\"loadedmetadata\", () => {\n        try {\n          userAudio.current.play();\n        } catch (err) {}\n        window.addEventListener(\"mousedown\", () => {\n          userAudio.current.play();\n        });\n      });\n    });\n\n    peer.signal(incomingSignal);\n\n    return peer;\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\" ref={container}>\n        <button className=\"btn\" definer=\"stream\" onClick={stream}>Stream</button>\n        <button className=\"btn\" definer=\"watch\" onClick={watch}>Watch</button>\n      </div>\n      <video className=\"video\" controls ref={userVideo}></video>\n      <audio className=\"audio\" controls ref={userAudio}></audio>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}